Sherzod B. Ruzmetov sherzodr@ultracgis.com 
Sat, 18 May 2002 18:17:35 -0600 (MDT) 

Previous message: [cgi-session] Re: [CGI] Session Management with CGI::Session 
Next message: [cgi-session] Re: [CGI] session management 
Messages sorted by: [ date ] [ thread ] [ subject ] [ author ] 

--------------------------------------------------------------------------------

CGI::Session or Apache::Session?

If you haven't used any of the above libraries before,
here is a little overview for you to get started with.
And you can choose the one that you find suitable.

Initial release of CGI::Session was a more
user friendly front-end for Apache::Session and
all the other drivers Apache::Session came with.
But as of version 2.0 CGI::Session stopped
being dependant on Apache::Session by implementing
its own drivers.

CGI::Session offers all the capabilities of Apache::Session,
and adds new features like "Session last access time",
"Session creation time" and "Session expiration time".

Besides the new features CGI::Session implements,
there is quite a difference in the interface of the two
libraries.

        INITIALIZING NEW SESSION

Apache::Session uses tied-hash-access method to
update and access session data. It uses
Perl's built-in hash variables to do its job transparently,
so you can ignore the object returned from the library.

In Apache::Session you should tie() a hash to the library:

tie %session, "Apache::Session::File", undef,
                {
                        LockDirectory=>'/tmp',
                        Directory    => '/tmp'
                };


CGI::Session take a different approach:

$session = new CGI::Session::File( undef, {
                        LockDirectory=>'/tmp',
                        Directory    => '/tmp'
                        });


        ACCESSING SESSION ID

After tie()ing the %session  to the Apache::Session you
can retrieve the session with the following syntax:

        $sid = $session{_session_id};

In CGI::Session:

        $sid = $session->id;


        STORING DATA IN THE SESSION

In Apache::Session:

        $session{"f_name"} = "Sherzod"

In CGI::Session:

        $session->param("f_name", "Sherzod")



        ACCESSING SESSION DATA

In Apache::Session:

        my $name = $session{"f_name"};

In CGI::Session:

        my $name = $session->param("f_name");


        EXPIRING SESSIONS

Not suported in Apache::Session. You have to
time-stamp your session data yourself.

In CGI::Session data is timestamped automaticly, and
provides methods for "last accessed time", "creation time" and
"expiration date". And the programmer can implement expiring
sessions himself.

I'll put more emphasys on auto-expiring sessions in the
subsequent releases.

        DELETING A SESSION

In Apache::Session:

        tied(%session)->delete()

In CGI::Session:

        $session->delete();



        SERIALIZING SESSION DATA

Apache::Session uses Storable (very frequently used CPAN module)
to get the job done. So you need to install Storable to get
the library working.

CGI::Session uses standard Perl library, Data::Dumper. It comes
with Perl so no libraries are required to be installed.

        AVAILABLE DRIVERS

Apache::Session supports File, DB_File, MySQL, Oracle, Sybase, Postgress
and some other drivers.

As of CGI::Session 2.4 the library supports File, DB_File and MySql 
drivers,
but also enables other developers to write their own drivers very easily.


I hope the above overview helped you out to decided which library
you want to choose for your next project.

Stay tuned for more updates

--
Sherzod


